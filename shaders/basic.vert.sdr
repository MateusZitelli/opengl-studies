#version 400 core
layout(location = 0) in vec4 inPosition;
layout(location = 1) in vec4 inColor;
layout(location = 2) in vec4 inNormal;
out vec4 exColor;

uniform mat4 ModelMatrix;
uniform mat4 ViewMatrix;
uniform mat4 ProjectionMatrix;

void main(){
    mat4 modelview = ViewMatrix * ModelMatrix;
    gl_Position = (ProjectionMatrix * modelview) * inPosition;
    vec4 tnorm = normalize(modelview * inNormal);
    vec4 lightPos = ViewMatrix * vec4(0, 0, -5, 1);
    vec4 lightVec = normalize(lightPos - modelview * inPosition);
    vec4 camVec = -normalize(gl_Position - vec4(0,0,0,1));
    vec4 reflectedVec = normalize(2 * dot(lightVec, tnorm) * tnorm - lightVec);
    float idiffuse = max(dot(lightVec, tnorm), 0.0);
    float ispecular = max(dot(reflectedVec, camVec), 0.0);
    exColor = inColor * (idiffuse * 0.7 + 0.3) + 10 * pow(ispecular, 2);
}
